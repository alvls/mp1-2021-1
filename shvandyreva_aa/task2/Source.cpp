/* 
Разработать класс Динамический массив.
Класс должен хранить заданное число вещественных элементов, размещаемых в динамической памяти.
Класс должен предоставлять следующие операции: 
1) задать размер массива, 
2) узнать размер массива, 
3) задать элемент массива по его индексу, 
4) узнать элемент массива по его индексу, 
5) найти минимальный элемент массива, 
6) проверить, является ли массив упорядоченным, 
7) выделить из массива подмассив с элементами с нечетными индексами.
Класс должен содержать все необходимые конструкторы, деструктор, оператор присваивания, а также «уметь» выводить себя на консоль. 
*/

#include <iostream>
using namespace std;

class DynamicArray {
private:
    int size; //размер массива
    int *d_array = new int[size]; //динамический массив
public:
    DynamicArray (double metr_k) // конструктор класса
    {
        for (int i = 0; i < size; i++) 
        {
            d_array[i] = 0;
        }
    }

};

int main()
{
    setlocale(LC_ALL, "rus");
    int size_arr = 0;
    int* array = new int[size_arr]; //динамический массив
    int choice_operation;
    DynamicArray objDynamicArray();
    cout << " Добро пожаловать в программу, позволяющую создавать динамические массивы и производить некоторые действия с ними! " << endl;
    while (1)
    {
        cout << " Список операций:\n1) задать размер массива, \n2) узнать размер массива,\n3) задать элемент массива по его индексу,\n4) узнать элемент массива по его индексу, \n5) найти минимальный элемент массива, \n6) проверить, является ли массив упорядоченным,\n7) выделить из массива подмассив с элементами с нечетными индексами.\n8) Выход\n " << endl;
        cout << " Введите номер нужного Вам пункта меню:  ";
        cin >> choice_operation;
        while (choice_operation < 1 || choice_operation>8)
        {
            cout << " Операции с таким номером нет. Пожалуйста, ведите нужный номер ещё раз:\n " << endl;
            cin >> choice_operation;
        }
        switch (choice_operation) 
        {
        case 1:
        {
            cout << " \nВведите размер массива: " << endl; 
            cin >> size_arr;
            break;
        }
        case 2:
        {
            cout << " \nРазмер массива: " << size_arr << endl;
            break;
        }
        case 3:
        {
            cout << " \nЗадайте эллемент массива по его индексу: " << endl;
            cin >> size_arr;
            break;
        }
        case 4:
        {
            cout << " \nВведите индекс интересующего вас массива: " << endl;

            break;
        }
        case 5:
        {
            cout << " \nМинимальный элемент массива: " << endl;

            break;
        }
        case 6:
        {
            cout << " \nЗадайте эллемент массива по его индексу: " << endl;//является ли упорядоченным 

            break;
        }
        case 7:
        {
            cout << " \nМассив элементов с нечетными индексами: " << endl;
            break;
        }
        case 8:
        {
            system("pause");
            return 0;
        }
        }
    }
    return 0;
}
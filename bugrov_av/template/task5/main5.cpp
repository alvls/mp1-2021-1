//Разработать классы Железнодорожная касса и Горьковская железная дорога.
//Класс Железнодорожная касса должен имитировать работу кассы по продаже билетов на поезда Нижний Новгород – Москва.
//Считать, что продажа билетов проводится на поезда в пределах 30 дней от текущей даты.
//Считать, что по маршруту Нижний Новгород – Москва курсирует три скоростных поезда «Ласточка», один фирменный и один скорый поезд в сутки в каждом направлении.
//Все вагоны в поездах «Ласточка» однотипны и содержат по 100 сидячих мест.
///В фирменном и скором поездах вагоны трех типов : 
///плацкартные(27 верхних, 27 нижних мест),
///купейные(18 верхних, 18 нижних мест), 
///СВ(18 нижних мест).
//Число вагонов в поездах «Ласточка» – 8. 
///В фирменном поезде
/// - 2 вагона СВ, 
/// - 6 купейных вагонов, 
/// - 4 плацкартных вагона.
///В скором поезде – 4 купейных вагона, 8 плацкартных вагонов.
//Поезда идентифицируются номерами(десять номеров из диапазона от 1 до 100), вагоны – номерами(целые числа от 1 до 12), места – номерами(целые числа от 1 до максимума для данного типа вагона).
//Информация о всех поездах и всех проданных билетах хранится в классе Горьковская железная дорога.Для каждого поезда, каждого типа вагона и каждого типа места установлена стоимость билета.
//Считать, что все поезда не делают промежуточных остановок по маршруту.
//Класс Железнодорожная касса должен предоставлять следующие операции : 
//1) принять данные покупателя : дату, поезд, тип вагона(если есть выбор), количество билетов каждого возможного вида(если есть выбор), ФИО пассажиров 
//2) проверить наличие свободных мест по запросу покупателя(при невозможности выдать все билеты в одном вагоне, считать заказ невыполнимым), 
//3) зарезервировать места,
//4) рассчитать общую стоимость билетов, 
//5) отменить заказ билетов, 
//6) сформировать билеты(каждый билет включает : дату, номер поезда, номер вагона, номер места, ФИО пассажира, станция отправления, станция прибытия).
//Класс Горьковская железная дорога должен использоваться для поддержки работы класса Железнодорожная касса и может быть разработан в минимально - необходимом варианте.
#include <vector>
#include <iostream>
using namespace std;
class firm
{
	const int COMRESSLEEP[3] = { 6,4,2 };
	int compartment[6];
	int reserved[4];
	int sleeping[2];
	friend class railway;
};
class speed
{
	const int COMRESS[3] = { 4,8 };
	int compartment[4];
	int reserved[8];
	int sleeping[2];
	friend class railway;
};
class swallow
{
	int vagon[8] = { 100,100, 100, 100, 100, 100, 100, 100 };
	friend class railway;
};
class railway
{
	const int COMPMAX = 18;
	const int RESMAX = 27;
	const int SLEEPMAX = 18;
	swallow swtrain[3];
	speed strain;
	firm ftrain;
public:
	railway()
	{
		int i, j;
		for (i = 0; i < strain.COMRESS[0]; i++)
			strain.compartment[i] = COMPMAX;
		for (i = 0; i < strain.COMRESS[1]; i++)
			strain.reserved[i] = RESMAX;
		for (i = 0; i < ftrain.COMRESSLEEP[0]; i++)
			ftrain.compartment[i] = COMPMAX;
		for (i = 0; i < ftrain.COMRESSLEEP[1]; i++)
			ftrain.reserved[i] = RESMAX;
		for (i = 0; i < ftrain.COMRESSLEEP[2]; i++)
			ftrain.reserved[i] = SLEEPMAX;

	}
};
class box_office
{

};